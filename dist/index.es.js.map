{"version":3,"file":"index.es.js","sources":["../src/helpers.js","../src/hooks/useWidth.js","../src/hooks/useColumns.js","../src/components/PreviewList.js","../src/components/SnackbarContentWrapper.js","../src/hooks/useSnackbar.js","../src/components/DropzoneAreaBase.js","../src/hooks/useFiles.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialogBase.js","../src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\n    if (file.type.split('/')[0] === 'image') {\n        return true;\n    }\n}\n\nexport function convertBytesToMbsOrKbs(filesize) {\n    let size = '';\n    if (filesize >= 1048576) {\n        size = (filesize / 1048576) + ' megabytes';\n    } else if (filesize >= 1024) {\n        size = (filesize / 1024) + ' kilobytes';\n    } else {\n        size = filesize + ' bytes';\n    }\n    return size;\n}\n\nexport async function createFileFromUrl(url) {\n    const response = await fetch(url);\n    const data = await response.blob();\n    const metadata = {type: data.type};\n    const filename = url.replace(/\\?.+/, '').split('/').pop();\n    return new File([data], filename, metadata);\n}\n\nexport function readFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            resolve(event?.target?.result);\n        };\n        reader.onerror = (event) => {\n            reader.abort();\n            reject(event);\n        };\n        reader.readAsDataURL(file);\n    });\n}\n","import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {useTheme} from '@material-ui/core/styles';\n\n/**\n * Returns xs,sm,md,lg or xl depending on the screenSize\n * @see https://material-ui.com/components/use-media-query/#migrating-from-withwidth\n */\nexport const useWidth = () => {\n    const theme = useTheme();\n    const keys = [...theme.breakpoints.keys].reverse();\n    return (\n        keys.reduce((output, key) => {\n            const matches = useMediaQuery(theme.breakpoints.up(key));\n            return !output && matches ? key : output;\n        }, null) || 'xs'\n    );\n};\n","import {useState, useEffect} from 'react';\nimport {useWidth} from './useWidth';\n\n/**\n * Calculates the number of columns to use in the preview based on a function passed in\n * numberOfColumns is a state variable which will update every time the width of the\n * screen changes\n */\nexport const useColumns = (getCols, filesLimit, numberOfFileObjects) => {\n    const [numberOfColumns, setCols] = useState(1);\n    const width = useWidth();\n\n    useEffect(() => {\n        const cols = getCols(width, filesLimit, numberOfFileObjects);\n        setCols(cols);\n    }, [width]);\n\n    return numberOfColumns;\n};\n","import Chip from '@material-ui/core/Chip';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {isImage as isImageCheck} from '../helpers';\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {useColumns} from '../hooks/useColumns';\n\nconst useStyles = makeStyles(({spacing}) => ({\n    root: {\n        alignItems: 'center',\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        backgroundColor: 'rgba(255,255,255,0.87)',\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n    iconWrapper: {\n        height: '100%',\n        backgroundColor: '#f2f2f2',\n    },\n    fileIcon: {\n        flexGrow: 1,\n        height: '50%',\n        marginTop: spacing(3),\n    },\n    fileIconBottom: {\n        marginTop: spacing(9),\n    },\n}\n), {name: 'MuiDropzonePreviewList'});\n\nconst PreviewList = ({\n    fileObjects,\n    filesLimit,\n    getCols,\n    handleRemove,\n    showFileNames,\n    useChipsForPreview,\n    previewChipProps,\n    previewGridClasses,\n    previewGridProps,\n    previewType,\n    getPreviewIcon,\n}) => {\n    const classes = useStyles();\n    const cols = useColumns(getCols, filesLimit, fileObjects.length);\n    const previewInside = previewType === 'inside';\n\n    if (useChipsForPreview) {\n        return (\n            <Grid\n                spacing={1}\n                direction=\"row\"\n                {...previewGridProps.container}\n                container={true}\n                className={clsx(classes.root, previewGridClasses.container)}\n            >\n                {fileObjects.map((fileObject, i) => {\n                    return (\n                        <Grid\n                            {...previewGridProps.item}\n                            item={true}\n                            key={`${fileObject.file?.name ?? 'file'}-${i}`}\n                            className={classes.imageContainer}\n                        >\n                            <Chip\n                                variant=\"outlined\"\n                                {...previewChipProps}\n                                label={fileObject.file.name}\n                                onDelete={handleRemove(i)}\n                            />\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n\n    return (\n        <GridList cols={cols}\n            className={clsx({[classes.root]: previewInside}, previewGridClasses.container)}\n            {...previewGridProps?.gridList}>\n            {fileObjects.map((fileObject, i) => {\n                const fileTitle = showFileNames && fileObject.file?.name;\n                const isImage = isImageCheck(fileObject.file);\n\n                return (\n                    <GridListTile\n                        key={`${fileObject.file?.name ?? 'file'}-${i}`}\n                        className={clsx(previewGridClasses.gridListTile, {[classes.iconWrapper]: !isImage})}\n                        {...previewGridProps?.gridListTitle}\n                    >\n                        {getPreviewIcon(\n                            fileObject,\n                            classes,\n                            isImage,\n                            previewGridProps?.gridListTitleBar?.titlePosition === 'top'\n                        )}\n\n                        <GridListTileBar\n                            title={fileTitle}\n                            actionIcon={\n                                <IconButton\n                                    onClick={handleRemove(i)}\n                                    aria-label={'Delete'}\n                                    className={clsx(previewGridClasses.removeIconButton, classes.icon)}\n                                >\n                                    <DeleteIcon />\n                                </IconButton>\n                            }\n                            {...previewGridProps?.gridListTitleBar}\n                        />\n\n                    </GridListTile>\n                );\n            })}\n        </GridList>\n    );\n};\n\nPreviewList.propTypes = {\n    fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n    filesLimit: PropTypes.number.isRequired,\n    getCols: PropTypes.func.isRequired,\n    getPreviewIcon: PropTypes.func.isRequired,\n    handleRemove: PropTypes.func.isRequired,\n    previewChipProps: PropTypes.object,\n    previewGridClasses: PropTypes.object,\n    previewGridProps: PropTypes.object,\n    previewType: PropTypes.string.isRequired,\n    showFileNames: PropTypes.bool,\n    useChipsForPreview: PropTypes.bool,\n};\n\nexport default PreviewList;\n","import IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    successAlert: {\n        backgroundColor: theme.palette.success.main,\n    },\n    errorAlert: {\n        backgroundColor: theme.palette.error.main,\n    },\n    infoAlert: {\n        backgroundColor: theme.palette.info.main,\n    },\n    warningAlert: {\n        backgroundColor: theme.palette.warning.main,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n        '& > svg': {\n            marginRight: theme.spacing(1),\n        },\n    },\n    icon: {\n        fontSize: 20,\n        opacity: 0.9,\n    },\n    closeButton: {},\n\n}), {name: 'MuiDropzoneSnackbar'});\n\n\nfunction SnackbarContentWrapper({\n    className,\n    message,\n    onClose,\n    variant,\n    ...other\n}) {\n    const classes = useStyles();\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[`${variant}Alert`], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={classes.icon} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nSnackbarContentWrapper.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default SnackbarContentWrapper;\n","import {useState, useCallback} from 'react';\n\n/**\n * Holds state required to utilize the snackbar and provides handlers to send messages via the snackbar\n */\nexport const useSnackbar = (onAlert) => {\n    const [state, setState] = useState({\n        open: false,\n        message: '',\n        variant: 'success',\n    });\n\n    const sendMessage = useCallback((message, variant) => {\n        setState({\n            open: true,\n            message: message,\n            variant,\n        });\n\n        if (onAlert) {\n            onAlert(message, variant);\n        }\n    }, [onAlert]);\n\n    const handleCloseSnackbar = useCallback(() => {\n        setState((prev) => ({...prev, open: false}));\n    }, []);\n\n    return {\n        handleCloseSnackbar,\n        sendMessage,\n        snackbarMessage: state.message,\n        snackbarVariant: state.variant,\n        snackbarOpen: state.open,\n    };\n};\n","import Snackbar from '@material-ui/core/Snackbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {Fragment, useCallback} from 'react';\nimport Dropzone from 'react-dropzone';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport {convertBytesToMbsOrKbs, readFile} from '../helpers';\nimport PreviewList from './PreviewList';\nimport SnackbarContentWrapper from './SnackbarContentWrapper';\nimport {useSnackbar} from '../hooks/useSnackbar';\n\nconst useStyles = makeStyles(({spacing, palette, shape}) => ({\n    '@keyframes progress': {\n        '0%': {\n            backgroundPosition: '0 0',\n        },\n        '100%': {\n            backgroundPosition: '-70px 0',\n        },\n    },\n    root: {\n        display: 'flex',\n        position: 'relative',\n        width: '100%',\n        minHeight: '250px',\n        backgroundColor: palette.background.paper,\n        border: 'dashed',\n        borderColor: palette.divider,\n        borderRadius: shape.borderRadius,\n        boxSizing: 'border-box',\n        cursor: 'pointer',\n        overflow: 'hidden',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    active: {\n        animation: '$progress 2s linear infinite !important',\n        backgroundImage: `repeating-linear-gradient(-45deg,\n            ${palette.background.paper},\n            ${palette.background.paper} 25px,\n            ${palette.divider} 25px,\n            ${palette.divider} 50px)`,\n        backgroundSize: '150% 100%',\n        border: 'solid',\n        borderColor: palette.primary.light,\n    },\n    invalid: {\n        backgroundImage: `repeating-linear-gradient(-45deg,\n            ${palette.error.light},\n            ${palette.error.light} 25px,\n            ${palette.error.dark} 25px,\n            ${palette.error.dark} 50px)`,\n        borderColor: palette.error.main,\n    },\n    textContainer: {\n        display: 'flex',\n    },\n    text: {\n        marginBottom: spacing(3),\n        marginTop: spacing(3),\n    },\n    icon: {\n        width: 51,\n        height: 51,\n        color: palette.text.primary,\n    },\n}\n), {name: 'MuiDropzoneArea'});\n\nconst defaultGetCols = (width, filesLimit) => {\n    const returnBelowLimit = (number) => {\n        if (number < filesLimit) {\n            return number;\n        }\n        return filesLimit;\n    };\n\n    switch (width) {\n        case 'xs': return returnBelowLimit(1);\n        case 'sm': return returnBelowLimit(2);\n        case 'md': return returnBelowLimit(3);\n        case 'lg': return returnBelowLimit(4);\n        case 'xl': return returnBelowLimit(5);\n    }\n};\n\nconst defaultSnackbarAnchorOrigin = {\n    horizontal: 'left',\n    vertical: 'bottom',\n};\n\nconst defaultGetPreviewIcon = (fileObject, classes, isImage, titleBarTop) => {\n    if (isImage) {\n        return (<img\n            className={classes.image}\n            role=\"presentation\"\n            src={fileObject.data}\n        />);\n    }\n\n    return <Grid container className={classes.iconWrapper} justify=\"center\" >\n        <AttachFileIcon className={clsx(classes.fileIcon, {[classes.fileIconBottom]: titleBarTop})} />\n    </Grid>;\n};\n\n/**\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\n */\nconst DropzoneAreaBase = ({\n    fileObjects,\n    filesLimit,\n    getFileAddedMessage,\n    getFileLimitExceedMessage,\n    getFileRemovedMessage,\n    getDropRejectMessage,\n    onAdd,\n    onAlert,\n    onDrop,\n    onDropRejected,\n    onDelete,\n    acceptedFiles,\n    alertSnackbarProps,\n    disableRejectionFeedback,\n    dropzoneClass,\n    dropzoneParagraphClass,\n    dropzoneProps,\n    dropzoneText,\n    getCols,\n    getPreviewIcon,\n    Icon,\n    inputProps,\n    maxFileSize,\n    previewChipProps,\n    previewGridClasses,\n    previewGridProps,\n    previewText,\n    previewType,\n    showAlerts,\n    showFileNames,\n    useChipsForPreview,\n}) => {\n    const classes = useStyles();\n\n    const {\n        handleCloseSnackbar,\n        sendMessage,\n        snackbarMessage,\n        snackbarOpen,\n        snackbarVariant,\n    } = useSnackbar(onAlert);\n\n    const handleDropAccepted = useCallback(async(acceptedFiles, evt) => {\n        if (filesLimit > 1 && fileObjects.length + acceptedFiles.length > filesLimit) {\n            const message = getFileLimitExceedMessage(filesLimit);\n            sendMessage(message, 'error');\n            return;\n        }\n\n        // Notify Drop event\n        if (onDrop) {\n            onDrop(acceptedFiles, evt);\n        }\n\n        // Retrieve fileObjects data\n        const fileObjs = await Promise.all(\n            acceptedFiles.map(async(file) => {\n                const data = await readFile(file);\n                return {\n                    file,\n                    data,\n                };\n            })\n        );\n\n        // Notify added files\n        if (onAdd) {\n            onAdd(fileObjs);\n        }\n\n        const successMessage = fileObjs.reduce((msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name), '');\n        sendMessage(successMessage, 'success');\n    }, [filesLimit, fileObjects, onDrop]);\n\n    const handleDropRejected = useCallback((rejectedFiles, evt) => {\n        let message = '';\n        if (fileObjects.length + rejectedFiles.length > filesLimit) {\n            message = getFileLimitExceedMessage(filesLimit);\n        } else {\n            rejectedFiles.forEach((rejectedFile) => {\n                message = getDropRejectMessage(rejectedFile, acceptedFiles, maxFileSize);\n            });\n        }\n\n        if (onDropRejected) {\n            onDropRejected(rejectedFiles, evt);\n        }\n        sendMessage(message, 'error');\n    }, [acceptedFiles, maxFileSize, onDropRejected]);\n\n    const handleRemove = useCallback((fileIndex) => (event) => {\n        event.stopPropagation();\n\n        // Find removed fileObject\n        const removedFileObj = fileObjects[fileIndex];\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj, fileIndex);\n        }\n        const message = getFileRemovedMessage(removedFileObj.file.name);\n        sendMessage(message, 'info');\n    }, [fileObjects, onDelete, getFileRemovedMessage]);\n\n    const acceptFiles = acceptedFiles?.join(',');\n    const isMultiple = filesLimit > 1;\n    const someFiles = fileObjects.length > 0;\n\n    return (\n        <>\n            <Dropzone\n                {...dropzoneProps}\n                accept={acceptFiles}\n                onDropAccepted={handleDropAccepted}\n                onDropRejected={handleDropRejected}\n                maxSize={maxFileSize}\n                multiple={isMultiple}\n            >\n                {({getRootProps, getInputProps, isDragActive, isDragReject}) => (\n                    <div\n                        {...getRootProps()}\n                        className={clsx(\n                            classes.root,\n                            dropzoneClass,\n                            isDragActive && classes.active,\n                            (!disableRejectionFeedback && isDragReject) && classes.invalid,\n                        )}\n                    >\n                        <input {...getInputProps(inputProps)} />\n\n                        <Grid container className={classes.textContainer} direction=\"column\" justify=\"center\" alignItems=\"center\">\n                            <Typography\n                                variant=\"h5\"\n                                component=\"p\"\n                                className={clsx(classes.text, dropzoneParagraphClass)}\n                            >\n                                {dropzoneText}\n                            </Typography>\n                            {Icon ? (\n                                <Icon className={classes.icon} />\n                            ) : (\n                                <CloudUploadIcon className={classes.icon} />\n                            )}\n                        </Grid>\n\n                        {someFiles && previewType === 'inside' &&\n              <PreviewList\n                  fileObjects={fileObjects}\n                  filesLimit={filesLimit}\n                  getCols={getCols}\n                  handleRemove={handleRemove}\n                  getPreviewIcon={getPreviewIcon}\n                  showFileNames={showFileNames}\n                  useChipsForPreview={useChipsForPreview}\n                  previewChipProps={previewChipProps}\n                  previewGridClasses={previewGridClasses}\n                  previewGridProps={previewGridProps}\n                  previewType={previewType}\n              />\n                        }\n                    </div>\n                )}\n            </Dropzone>\n\n            {someFiles && previewType === 'below' &&\n        <Fragment>\n            <Typography variant=\"subtitle1\" component=\"span\">\n                {previewText}\n            </Typography>\n\n            <PreviewList\n                fileObjects={fileObjects}\n                filesLimit={filesLimit}\n                getCols={getCols}\n                handleRemove={handleRemove}\n                getPreviewIcon={getPreviewIcon}\n                showFileNames={showFileNames}\n                useChipsForPreview={useChipsForPreview}\n                previewChipProps={previewChipProps}\n                previewGridClasses={previewGridClasses}\n                previewGridProps={previewGridProps}\n                previewType={previewType}\n            />\n        </Fragment>\n            }\n\n            {((typeof showAlerts === 'boolean' && showAlerts) ||\n        (Array.isArray(showAlerts) && showAlerts.includes(snackbarVariant))) &&\n        <Snackbar\n            anchorOrigin={defaultSnackbarAnchorOrigin}\n            autoHideDuration={6000}\n            {...alertSnackbarProps}\n            open={snackbarOpen}\n            onClose={handleCloseSnackbar}\n        >\n            <SnackbarContentWrapper\n                onClose={handleCloseSnackbar}\n                variant={snackbarVariant}\n                message={snackbarMessage}\n            />\n        </Snackbar>\n            }\n        </>\n    );\n};\n\nDropzoneAreaBase.defaultProps = {\n    acceptedFiles: [],\n    filesLimit: 3,\n    fileObjects: [],\n    maxFileSize: 3000000,\n    dropzoneText: 'Drag and drop a file here or click',\n    previewText: 'Preview:',\n    previewType: 'inside',\n    disableRejectionFeedback: false,\n    showFileNames: true,\n    useChipsForPreview: false,\n    previewChipProps: {},\n    previewGridClasses: {},\n    previewGridProps: {},\n    showAlerts: true,\n    alertSnackbarProps: {\n        anchorOrigin: {\n            horizontal: 'left',\n            vertical: 'bottom',\n        },\n        autoHideDuration: 6000,\n    },\n    getCols: defaultGetCols,\n    getFileLimitExceedMessage: (filesLimit) => (`Maximum allowed number of files exceeded. Only ${filesLimit} allowed`),\n    getFileAddedMessage: (fileName) => (`File ${fileName} successfully added.`),\n    getPreviewIcon: defaultGetPreviewIcon,\n    getFileRemovedMessage: (fileName) => (`File ${fileName} removed.`),\n    getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\n        let message = `File ${rejectedFile.name} was rejected. `;\n        if (!acceptedFiles.includes(rejectedFile.type)) {\n            message += 'File type not supported. ';\n        }\n        if (rejectedFile.size > maxFileSize) {\n            message += 'File is too big. Size limit is ' + convertBytesToMbsOrKbs(maxFileSize) + '. ';\n        }\n        return message;\n    },\n};\n\nexport const FileObjectShape = PropTypes.shape({\n    file: PropTypes.object,\n    data: PropTypes.any,\n});\n\nDropzoneAreaBase.propTypes = {\n    /** A list of file types to accept.\n * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\n */\n    acceptedFiles: PropTypes.arrayOf(PropTypes.string),\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /** Icon to be displayed inside the dropzone area. */\n    Icon: PropTypes.elementType,\n    /** Currently loaded files. */\n    fileObjects: PropTypes.arrayOf(FileObjectShape),\n    /** Maximum file size (in bytes) that the dropzone will accept. */\n    maxFileSize: PropTypes.number,\n    /** Text inside the dropzone. */\n    dropzoneText: PropTypes.string,\n    /** Custom CSS class name for dropzone container. */\n    dropzoneClass: PropTypes.string,\n    /** Custom CSS class name for text inside the container. */\n    dropzoneParagraphClass: PropTypes.string,\n    /** Disable feedback effect when dropping rejected files. */\n    disableRejectionFeedback: PropTypes.bool,\n    /** Shows file name under the dropzone image. */\n    showFileNames: PropTypes.bool,\n    /** Shows file name under the image. */\n    useChipsForPreview: PropTypes.bool,\n    /**\n * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\n *\n * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\n */\n    previewChipProps: PropTypes.object,\n    /**\n * Custom CSS classNames for preview Grid components.<br/>\n * Should be in the form {container: string, item: string, image: string}.\n */\n    previewGridClasses: PropTypes.object,\n    /**\n * Props to pass to the Material-UI Grid components.<br/>\n * Should be in the form {container: GridProps, item: GridProps}.\n *\n * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\n */\n    previewGridProps: PropTypes.object,\n    /** The label for the file preview section. */\n    previewText: PropTypes.string,\n    /** Determines whether previews are shown inside the dropzone area, below, or not at all. Acceptable values are 'inside', 'below', 'none'. */\n    previewType: PropTypes.oneOf(['inside', 'below', 'none']),\n    /**\n * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\n *\n * - can be a boolean (\"global\" `true` or `false` for all alerts).\n * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\n *  - showAlerts={['error']} for only errors.\n *  - showAlerts={['error', 'info']} for both errors and info.\n *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\n *  - showAlerts={[]} is same as showAlerts={false}.\n */\n    showAlerts: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.arrayOf(PropTypes.oneOf(['error', 'success', 'info'])),\n    ]),\n    /**\n * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\n *\n * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\n */\n    alertSnackbarProps: PropTypes.object,\n    /**\n * Props to pass to the Dropzone component.\n *\n * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\n */\n    dropzoneProps: PropTypes.object,\n    /**\n * Attributes applied to the input element.\n *\n * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\n */\n    inputProps: PropTypes.object,\n    /**\n * A function which determines which the number of columns to display in the preview list\n *\n * *Default*: Returns a sensible number of columns depending on the screen size (i.e. xs=1, sm=2, md=3, lg=4, xl=5) without exceeding the filesLimit (e.g. There would be no point displaying 4 columns if the filesLimit is 3)\n *\n * @param {string} width Width prop from useWidth, this will be one of ['xs','sm','md','lg','xl'] depending on the current screen size\n * @param {number} filesLimit The `filesLimit` prop\n * @param {number} currentNumberOfFiles The number of files in the `state.fileObjects`\n */\n    getCols: PropTypes.func,\n    /**\n * Get alert message to display when files limit is exceed.\n *\n * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\n *\n * @param {number} filesLimit The `filesLimit` currently set for the component.\n */\n    getFileLimitExceedMessage: PropTypes.func,\n    /**\n * Get alert message to display when a new file is added.\n *\n * *Default*: \"File ${fileName} successfully added.\"\n *\n * @param {string} fileName The newly added file name.\n */\n    getFileAddedMessage: PropTypes.func,\n    /**\n * Get alert message to display when a file is removed.\n *\n * *Default*: \"File ${fileName} removed.\"\n *\n * @param {string} fileName The name of the removed file.\n */\n    getFileRemovedMessage: PropTypes.func,\n    /**\n * Get alert message to display when a file is rejected onDrop.\n *\n * *Default*: \"File ${rejectedFile.name} was rejected.\"\n *\n * @param {Object} rejectedFile The file that got rejected\n * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\n * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\n */\n    getDropRejectMessage: PropTypes.func,\n    /**\n * A function which determines which icon to display for a file preview.\n *\n * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\n *\n * @param {FileObject} objectFile The file which the preview will belong to\n * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\n */\n    getPreviewIcon: PropTypes.func,\n    /**\n * Fired when new files are added to dropzone.\n *\n * @param {FileObject[]} newFiles The new files added to the dropzone.\n */\n    onAdd: PropTypes.func,\n    /**\n * Fired when an alert is triggered.\n *\n * @param {string} message Alert message.\n * @param {string} variant One of \"error\", \"info\", \"success\".\n */\n    onAlert: PropTypes.func,\n    /**\n * Fired when a file is deleted from the previews panel.\n *\n * @param {FileObject} deletedFileObject The file that was removed.\n * @param {number} index The index of the removed file object.\n */\n    onDelete: PropTypes.func,\n    /**\n * Fired when the user drops files into the dropzone.\n *\n * @param {File[]} droppedFiles All the files dropped into the dropzone.\n * @param {Event} event The react-dropzone drop event.\n */\n    onDrop: PropTypes.func,\n    /**\n * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\n *\n * @param {File[]} rejectedFiles All the rejected files.\n * @param {Event} event The react-dropzone drop event.\n */\n    onDropRejected: PropTypes.func,\n    /**\n     * Fired when an alert is triggered.\n     *\n     * @param {string} message Alert message.\n     * @param {string} variant One of \"error\", \"info\", \"success\".\n     */\n    onAlert: PropTypes.func,\n};\n\nexport default DropzoneAreaBase;\n\n\n","import {useState, useEffect, useCallback} from 'react';\nimport {createFileFromUrl, readFile} from '../helpers';\n\n/**\n * holds files in its state and provides some handler methods to add and remove from that state\n */\nexport const useFiles = ({\n    onChange,\n    clearOnUnmount,\n    initialFiles,\n    filesLimit,\n    onDelete}) => {\n    const [fileObjects, setFileObjects] = useState([]);\n\n    // When the fileObjects change, fire the onChange method if it's defined\n    useEffect(() => {\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n    }, [fileObjects, onChange]);\n\n    // Initialize the files when the hook is loaded\n    useEffect(() => {\n        loadInitialFiles();\n\n        return () => {\n            if (clearOnUnmount) {\n                setFileObjects([]);\n            }\n        };\n    }, [loadInitialFiles]);\n\n    const loadInitialFiles = useCallback(async() => {\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            setFileObjects((prev) => ([...prev, ...fileObjs]));\n        } catch (err) {\n            console.log(err);\n        }\n    }, [initialFiles]);\n\n    const handleAddFiles = useCallback((newFileObjects) => {\n    // Update component state\n        setFileObjects((prev) => {\n            if (filesLimit <= 1) {\n                return [newFileObjects[0]];\n            }\n\n            return [...prev, ...newFileObjects];\n        });\n    }, [filesLimit]);\n\n    const handleDeleteFile = useCallback((removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        setFileObjects(remainingFileObjs);\n    }, [onDelete, fileObjects]);\n\n    const handleResetFiles = () => setFileObjects([]);\n\n    return {\n        handleAddFiles,\n        handleDeleteFile,\n        handleResetFiles,\n        fileObjects,\n    };\n};\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport DropzoneAreaBase from './DropzoneAreaBase';\nimport {useFiles} from '../hooks/useFiles';\n\n/**\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\n *\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\n *\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\n */\n\nconst DropzoneArea = ({\n    clearOnUnmount,\n    initialFiles,\n    onChange,\n    onDelete,\n    filesLimit,\n    ...dropzoneAreaBaseProps\n\n}) => {\n    const {\n        handleDeleteFile,\n        handleAddFiles,\n        fileObjects,\n    } = useFiles({\n        onChange,\n        clearOnUnmount,\n        initialFiles,\n        filesLimit,\n        onDelete,\n    });\n\n    return (\n        <DropzoneAreaBase\n            {...dropzoneAreaBaseProps}\n            fileObjects={fileObjects}\n            onAdd={handleAddFiles}\n            onDelete={handleDeleteFile}\n\n        />\n    );\n};\n\nDropzoneArea.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneArea.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /**\n     * Fired when the files inside dropzone change.\n     *\n     * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Fired when a file is deleted from the previews panel.\n     *\n     * @param {File} deletedFile The file that was removed.\n     */\n    onDelete: PropTypes.func,\n};\n\nexport default DropzoneArea;\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\n/**\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\n *\n * It supports all the Props and Methods from `DropzoneAreaBase`.\n */\nconst DropzoneDialogBase = ({\n    cancelButtonText,\n    dialogProps,\n    dialogTitle,\n    fullWidth,\n    maxWidth,\n    onClose,\n    onSave,\n    open,\n    submitButtonText,\n    ...dropzoneAreaProps\n}) => {\n    // Submit button state\n    const submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\n\n    return (\n        <Dialog\n            cancelButtonText={cancelButtonText}\n            dialogProps={dialogProps}\n            dialogTitle={dialogTitle}\n            maxWidth={maxWidth}\n            onClose={onClose}\n            onSave={onSave}\n            open={open}\n            fullWidth={fullWidth}\n            fileObjects={dropzoneAreaProps.fileObjects}\n        >\n            <DialogTitle>{dialogTitle}</DialogTitle>\n\n            <DialogContent>\n                <DropzoneAreaBase\n                    {...dropzoneAreaProps}\n                />\n            </DialogContent>\n\n            <DialogActions>\n                <Button\n                    color=\"primary\"\n                    onClick={onClose}\n                >\n                    {cancelButtonText}\n                </Button>\n\n                <Button\n                    color=\"primary\"\n                    disabled={submitDisabled}\n                    onClick={onSave}\n                >\n                    {submitButtonText}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n\nDropzoneDialogBase.defaultProps = {\n    open: false,\n    dialogTitle: 'Upload file',\n    dialogProps: {},\n    fullWidth: true,\n    maxWidth: 'sm',\n    cancelButtonText: 'Cancel',\n    submitButtonText: 'Submit',\n    showPreviews: true,\n    showPreviewsInDropzone: false,\n    showFileNamesInPreview: true,\n};\n\nDropzoneDialogBase.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Sets whether the dialog is open or closed. */\n    open: PropTypes.bool,\n    /** The Dialog title. */\n    dialogTitle: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n    ]),\n    /**\n     * Props to pass to the Material-UI Dialog components.\n     * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\n     */\n    dialogProps: PropTypes.object,\n    /**\n     * If `true`, the dialog stretches to `maxWidth`.<br/>\n     * Notice that the dialog width grow is limited by the default margin.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\n     * Set to `false` to disable `maxWidth`.\n     */\n    maxWidth: PropTypes.string,\n    /** Cancel button text in dialog. */\n    cancelButtonText: PropTypes.string,\n    /** Submit button text in dialog. */\n    submitButtonText: PropTypes.string,\n    /**\n     * Fired when the modal is closed.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onClose: PropTypes.func,\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onSave: PropTypes.func,\n    /**\n     * Shows previews **BELOW** the dropzone.<br/>\n     * **Note:** By default previews show up under in the Dialog and inside in the standalone.\n     */\n    showPreviews: PropTypes.bool,\n    /** Shows preview **INSIDE** the dropzone area. */\n    showPreviewsInDropzone: PropTypes.bool,\n    /** Shows file name under the image. */\n    showFileNamesInPreview: PropTypes.bool,\n};\n\nexport default DropzoneDialogBase;\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {useFiles} from '../hooks/useFiles';\n\nimport DropzoneDialogBase from './DropzoneDialogBase';\n\n\n/**\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\n *\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\n *\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\n */\nconst DropzoneDialog = ({\n    clearOnUnmount,\n    onClose,\n    onSave,\n    initialFiles,\n    filesLimit,\n    onDelete,\n    onChange,\n    ...other\n}) => {\n    const {\n        handleDeleteFile,\n        handleAddFiles,\n        fileObjects,\n        handleResetFiles,\n    } = useFiles({\n        onChange,\n        clearOnUnmount,\n        initialFiles,\n        filesLimit,\n        onDelete,\n    });\n\n    const handleClose = (evt) => {\n        if (onClose) {\n            onClose(evt);\n        }\n    };\n\n    const handleSave = (evt) => {\n        if (onSave) {\n            onSave(fileObjects.map((fileObject) => fileObject.file), evt);\n        }\n\n        if (clearOnUnmount) {\n            handleResetFiles();\n        }\n    };\n\n    return (\n        <DropzoneDialogBase\n            clearOnUnmount={clearOnUnmount}\n            initialFiles={initialFiles}\n            filesLimit={filesLimit}\n            onChange={onChange}\n            fileObjects={fileObjects}\n            onAdd={handleAddFiles}\n            onDelete={handleDeleteFile}\n            onClose={handleClose}\n            onSave={handleSave}\n            {...other}\n        />\n    );\n};\n\n\nDropzoneDialog.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneDialog.propTypes = {\n    ...DropzoneDialogBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /**\n   * Fired when the user clicks the Submit button.\n   *\n   * @param {File[]} files All the files currently inside the Dropzone.\n   * @param {SyntheticEvent} event The react `SyntheticEvent`.\n   */\n    onSave: PropTypes.func,\n};\n\nexport default DropzoneDialog;\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","url","fetch","response","blob","data","metadata","filename","replace","pop","File","readFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","abort","readAsDataURL","useWidth","theme","useTheme","keys","breakpoints","reverse","reduce","output","key","matches","useMediaQuery","up","useColumns","getCols","filesLimit","numberOfFileObjects","useState","numberOfColumns","setCols","width","useEffect","cols","useStyles","makeStyles","spacing","root","alignItems","position","height","margin","backgroundColor","icon","color","iconWrapper","fileIcon","flexGrow","marginTop","fileIconBottom","name","PreviewList","fileObjects","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","previewType","getPreviewIcon","classes","length","previewInside","container","clsx","map","fileObject","i","item","imageContainer","gridList","fileTitle","isImageCheck","gridListTile","gridListTitle","gridListTitleBar","titlePosition","removeIconButton","propTypes","PropTypes","arrayOf","object","isRequired","number","func","string","bool","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","successAlert","palette","main","errorAlert","infoAlert","warningAlert","message","display","marginRight","fontSize","opacity","closeButton","SnackbarContentWrapper","className","onClose","variant","other","Icon","node","oneOf","useSnackbar","onAlert","open","state","setState","sendMessage","useCallback","handleCloseSnackbar","prev","snackbarMessage","snackbarVariant","snackbarOpen","shape","backgroundPosition","minHeight","background","paper","border","borderColor","divider","borderRadius","boxSizing","cursor","overflow","flexDirection","justifyContent","active","animation","backgroundImage","backgroundSize","primary","light","invalid","dark","textContainer","text","marginBottom","defaultGetCols","returnBelowLimit","defaultSnackbarAnchorOrigin","horizontal","vertical","defaultGetPreviewIcon","titleBarTop","image","Grid","DropzoneAreaBase","getFileAddedMessage","getFileLimitExceedMessage","getFileRemovedMessage","getDropRejectMessage","onAdd","onDrop","onDropRejected","onDelete","acceptedFiles","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneProps","dropzoneText","inputProps","maxFileSize","previewText","showAlerts","handleDropAccepted","evt","all","fileObjs","successMessage","msg","fileObj","handleDropRejected","rejectedFiles","forEach","rejectedFile","fileIndex","stopPropagation","removedFileObj","acceptFiles","join","isMultiple","someFiles","getRootProps","getInputProps","isDragActive","isDragReject","Array","isArray","includes","defaultProps","anchorOrigin","autoHideDuration","fileName","FileObjectShape","any","elementType","oneOfType","useFiles","onChange","clearOnUnmount","initialFiles","setFileObjects","loadInitialFiles","initialFile","console","log","handleAddFiles","newFileObjects","handleDeleteFile","removedFileObjIdx","remainingFileObjs","filter","handleResetFiles","DropzoneArea","dropzoneAreaBaseProps","DropzoneDialogBase","cancelButtonText","dialogProps","dialogTitle","fullWidth","maxWidth","onSave","submitButtonText","dropzoneAreaProps","submitDisabled","showPreviews","showPreviewsInDropzone","showFileNamesInPreview","element","DropzoneDialog","handleClose","handleSave"],"mappings":"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"}